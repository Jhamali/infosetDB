##############################################################################
##############################################################################
#
# Sample reverse proxy code for NGINX and infoset-ng
#
##############################################################################
##############################################################################
#
# Steps:
#
# 1) Set your infoset-ng configuration to listen on localhost, port 6001
# 2) Set your server_name to a DNS fully qualified domain name or IP address
# 3) Make your server listen on a non 6001 port, like 6000 in the example
#    (or port 80)
# 4) Start NGINX and check the logs
#
##############################################################################
##############################################################################

upstream app_server {
  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response

  # For Gunicorn TCP configuration
  server 127.0.0.1:6001 fail_timeout=0;
}

server {
  # If no Host match, close the connection to prevent host spoofing
  listen 6000 default_server;
  return 444;
}

server {
  # use 'listen 6000 deferred;' for Linux
  # use 'listen 6000 accept_filter=httpready;' for FreeBSD
  listen 6000 deferred;
  client_max_body_size 4G;

  # set the correct host(s) for your site
  server_name 10.32.6.6;

  # Set the time out
  keepalive_timeout 5;

  # Only allow access to the infoset-ngi API URL
  location /infoset/api/v1.0 {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    # enable this if and only if you use HTTPS
    # proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Host $http_host;

    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;
    proxy_pass http://app_server;
  }

}
